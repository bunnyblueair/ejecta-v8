import groovy.swing.SwingBuilder

apply plugin: 'android'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    productFlavors {
        x86 {
            ndk {
                abiFilter "x86"
            }
            proguardFile 'proguard-project.txt'
        }
        arm {
            ndk {
                abiFilters "armeabi-v7a"
            }
            proguardFile 'proguard-project.txt'
        }
    }

    signingConfigs {
        release {
            storeFile file("/Users/kread/release/keystore")
            keyAlias "market"
            // These two lines make gradle believe that the signingConfigs
            // section is complete. Without them, tasks like installRelease
            // will not be available!
            storePassword "notYourRealPassword"
            keyPassword "notYourRealPassword"
        }
    }

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

//noinspection GroovyAssignabilityCheck
task askForPasswords << {
    def pass = ''
    if (System.console() == null) {
        new SwingBuilder().edt {
            dialog(modal: true, // Otherwise the build will continue running before you closed the dialog
                    title: 'Enter password', // Dialog title
                    alwaysOnTop: true, // pretty much what the name says
                    resizable: false, // Don't allow the user to resize the dialog
                    locationRelativeTo: null, // Place dialog in center of the screen
                    pack: true, // We need to pack the dialog (so it will take the size of it's children)
                    show: true // Let's show it
            ) {
                vbox { // Put everything below each other
                    label(text: "Please enter key passphrase:")
                    input = passwordField()
                    button(defaultButton: true, text: 'OK', actionPerformed: {
                        pass = pass = new String(input.password);
                        // Set pass variable to value of input field
                        dispose(); // Close dialog
                    })
                } // vbox end
            } // dialog end
        } // edt end
    } else {
        pass = System.console().readPassword("\nPlease enter key passphrase: ")
        pass = new String(pass)
    }

    if (pass.size() <= 0) {
        throw new InvalidUserDataException("You must enter a password to proceed.")
    } else {
        android.signingConfigs.release.storePassword = pass
        android.signingConfigs.release.keyPassword = pass
    }
}

tasks.whenTaskAdded { theTask ->
    if (theTask.name.equals("packageArmRelease") || theTask.name.equals("packageX86Release")) {
        theTask.dependsOn "askForPasswords"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':library')
    compile 'com.android.support:appcompat-v7:19.+'
    compile 'com.android.support:support-v4:19.+'
}
